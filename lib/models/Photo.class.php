<?php

/**
 * This file was autogenerated by exporter.
 * @property integer id
 * @property integer place_id
 * @property string name
 * @property integer width
 * @property integer height
 * @property string data_hash

 * @method Photo open() Find and open a record based on primary key.
 * @method Photo create() Create a new record and return object.
 */
class Photo extends DB_Record
{
	public static $table = "photos";

	public static $fields = array(
	    'id' => array('pk' => true,'ai' => true,),
	    'place_id' ,
	    'name' ,
	    'width' ,
	    'height' ,
	    'data_hash'
	);
	
	
	public function has_thumb($w, $h) {
		return file_exists($this->thumb_fpath($w, $h));
	}
	
	public function generate_thumb($w, $h) {
		if ($this->has_thumb($w, $h))
			return;
		error_log('generating thumb');
		$image = new Image($this->fpath());
		$image->resize($w, $h);
		file_put_contents($this->thumb_fpath($w, $h), $image->data());
	}
	
	public function fname() {
		return "{$this->data_hash}.jpg";
	}
	
	public function thumb_fname($w, $h) {
		return "{$this->data_hash}_thumb_{$w}x{$h}.jpg";
	}
	
	public function thumb_fpath($w, $h) {
		return Registry::get('photos.directory') . '/' . $this->thumb_fname($w, $h);
	}
	
	public function gen_and_thumb_fname($w, $h) {
		$this->generate_thumb($w, $h);
		return $this->thumb_fname($w, $h);
	}
	
	public function fpath() {
		return Registry::get('photos.directory') . '/' . $this->fname();
	}
}

Place::one_to_many('Photo', 'place', 'photos');