<?php

/**
 * This file was autogenerated by exporter.
 * @property integer id
 * @property string name
 * @property string loc_long
 * @property string loc_lat
 * @property string country
 * @property string city
 * @property string street
 * @property string street_number
 * @property string address
 * @property string email
 * @property string web
 * @property string tel
 * @property string description
 * @property float rate_current
 * @property integer rate_total
 * @property DateTime created_at

 * @method Place open() Find and open a record based on primary key.
 * @method Place create() Create a new record and return object.
 */
class Place extends DB_Record
{
	public static $table = "places";

	public static $fields = array(
	    'id' => array('pk' => true,'ai' => true,),
	    'name' ,
	    'loc_lng' ,
	    'loc_lat' ,
	    'country' ,
	  	'area_level_1',
	  	'area_level_2',
	    'city' ,
	    'street' ,
	    'street_number' ,
	    'address' ,
	    'email' ,
	    'web' ,
	    'tel' ,
	    'description' ,
	  	'rate_current',
	  	'rate_total',
	    'created_at' => array('type' => 'datetime',),	
	);
	
	public function all_data() {
		
		$place = $this->toArray();
		// Enrich with category info
		foreach(PlacesCats::raw_query()
			->select(array('cat_tag'))->where('place_id = ?')->execute($place['id']) as $cat)
			$place['categories'][] = $cat['cat_tag'];
		// Enrich with photo info
		foreach(Photo::open_query()
			->where('place_id = ?')->execute($place['id']) as $photo) {
			
			$place['photos'][] = array(
				'url' => url('/data/photos/' . $photo->fname()),
				'thumb_url' => url('/data/photos/' . $photo->gen_and_thumb_fname(154, 115)));
		}
		
		return $place;
	}
}

Place::events()->connect('op.pre.create', create_function('$e', '
	$e->filtered_value["created_at"] = new DateTime();
'));

Place::events()->connect('op.post.create', create_function('$e', '
	$p = $e->arguments["record"];
	SearchIndex::open()->addPlace($p);
'));